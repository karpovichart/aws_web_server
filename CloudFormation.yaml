AWSTemplateFormatVersion: "2010-09-09"
#Parameters:
#  VPCSecurityGroups:
#    Type: List<AWS::EC2::SecurityGroup::Id>
#    Description: The list of security groups to associate with this instance

Resources:
  WebInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.nano
      ImageId: ami-04932daa2567651e7
      AvailabilityZone:  "eu-central-1b"
     # KeyName: my-key
      SecurityGroupIds:
        - !Ref WebSecurityGroup
      SubnetId: !Ref PublicSubnet
      Tags:
        - Key: Name
          Value: webserver
  PostgresInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: postgres
      EngineVersion: 11.5
      AllocatedStorage: 20
      AvailabilityZone: "eu-central-1c"
#      DBSubnetGroupName: !Ref 'DBSubnetGroup'
      DBInstanceClass: 'db.t2.micro'
      DBName: "test"
      MasterUsername: "postgres"
      MasterUserPassword: "qwerty"
      PubliclyAccessible: false
      VPCSecurityGroups: !Ref DBSecurityGroup

#      DBSubnetGroupName:
#        - !Ref DBSubnetGroup

  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Web server
      GroupName: web
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Database
      GroupName: db
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: 0.0.0.0/0
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: VPC
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    DependsOn: VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for the RDS instance
      DBSubnetGroupName: DBSubnetGroup
      SubnetIds:
        - !Ref PublicSubnet
        - !Ref PrivateSubnet
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone:  "eu-central-1b"
      Tags:
      - Key: Name
        Value: !Sub ${AWS::StackName}-Public
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: "eu-central-1c"
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Private
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PublicRoute
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
#  PrivateRouteTable:
#    Type: AWS::EC2::RouteTable
#    Properties:
#      VpcId: !Ref VPC
#      Tags:
#        - Key: Name
#          Value: Private
#  PrivateRoute:
#    Type: AWS::EC2::Route
#    Properties:
#      RouteTableId: !Ref PrivateRouteTable

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable
#  PrivateSubnetRouteTableAssociation:
#      Type: AWS::EC2::SubnetRouteTableAssociation
#      Properties:
#        SubnetId: !Ref PrivateSubnet
#        RouteTableId: !Ref PrivateRouteTable